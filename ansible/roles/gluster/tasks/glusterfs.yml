---
    - name: Yum update the system
      yum:
        name: "*"
        state: latest
        
    - name: Ensure dependencies are installed.
      yum:
        name: 
          - centos-release-gluster
          - glusterfs-server
          - nfs-ganesha-gluster
          - centos-release-nfs-ganesha30
          - make
          - corosync
          - pacemaker
          - pcs

        enablerepo: ha
        state: present

    - name: Download docker installation shell script
      get_url:
        url: https://get.docker.com
        dest: /get-docker.sh
        mode: '0555'

    - name: Run docker installation shell script
      ansible.builtin.script: /get-docker.sh

    - name: Enable docker service, and change the state to start
      ansible.builtin.service:
        name: docker
        enabled: yes
        state: started

    - name: installing pip
      yum: 
        name: python3-pip

    - name: installing ansible module for managing docker
      pip: 
        name: docker
        
    - name: Create a xfs filesystem on /dev/vdb
      community.general.filesystem:
        fstype: xfs
        dev: /dev/vdb  
        
    - name: Create a mount point.
      file:
        path: /data/glusterfs/sharedvol/mybrick
        state: directory
        recurse: yes

    - name: Add a fstab entry.
      ansible.builtin.lineinfile:
        path: /etc/fstab
        line: 'LABEL=gluster-000 /data/glusterfs/sharedvol/mybrick xfs defaults  0 0'

    - name: Mount the filesystem.
      mount:
        path: /data/glusterfs/sharedvol/mybrick
        state: mounted
    
    - name: Enable and start the Gluster service.
      ansible.builtin.service:
        name: glusterd
        enabled: yes
        state: started
      
    - name: Create the Gluster environment by adding peers.
      shell: gluster peer probe master2 && gluster peer probe master3
      when: "inventory_hostname == groups.gluster[0]"
      
    - name: Create Gluster volume.
      shell: gluster volume create sharedvol replica 3 master{1,2,3}:/data/glusterfs/sharedvol/mybrick/brick
      when: "inventory_hostname == groups.gluster[0]"

    - name: Ensure Gluster volume is started.
      shell: gluster volume start sharedvol
      
    - name: configure Ganesha
      blockinfile:
        path: /etc/ganesha/ganesha.conf
        block: |
          EXPORT{
            Export_Id = 1 ;       # Unique identifier for each EXPORT (share)
            Path = "/sharedvol";  # Export path of our NFS share

            FSAL {
                name = GLUSTER;          # Backing type is Gluster
                hostname = "localhost";  # Hostname of Gluster server
                volume = "sharedvol";    # The name of our Gluster volume
            }

            Access_type = RW;          # Export access permissions
            Squash = No_root_squash;   # Control NFS root squashing
            Disable_ACL = FALSE;       # Enable NFSv4 ACLs
            Pseudo = "/sharedvol";     # NFSv4 pseudo path for our NFS share
            Protocols = "3","4" ;      # NFS protocols supported
            Transports = "UDP","TCP" ; # Transport protocols supported
            SecType = "sys";           # NFS Security flavors supported
          }

      
    - name: Update hacluster user password.
      user: 
        name: hacluster
        update_password: always 
        password: examplepassword

    - name: Enable and start the cluster services
      ansible.builtin.service:
        name: 
          - corosync
          - pacemaker
          - pcsd
        enabled: yes
        state: started
        
    - name: Authenticate with all cluster nodes using the hacluster user and password
      shell: pcs host auth master1 master2 master3 -u hacluster -p examplepassword
      when: "inventory_hostname == groups.gluster[0]"
      
    - name:  Create a cluster named HA-NFS 
      shell: pcs cluster setup HA-NFS master1 master2 master3
      when: "inventory_hostname == groups.gluster[0]"
      
    - name: Start the cluster on all nodes 
      shell: pcs cluster start --all
      when: "inventory_hostname == groups.gluster[0]"

    - name: Enable the cluster to run on all nodes at boot time 
      shell: pcs cluster enable --all
      when: "inventory_hostname == groups.gluster[0]"
      
    - name: Disable STONITH
      shell: pcs property set stonith-enabled=false
      when: "inventory_hostname == groups.gluster[0]"

    - name: Create a Pacemaker resource group that contains the resources necessary to host NFS services.
      shell: pcs resource create nfs_server systemd:nfs-ganesha op monitor interval=10s
      when: "inventory_hostname == groups.gluster[0]"

    - name: Create a IP cluster resource used to present the NFS server 
      shell: pcs resource create nfs_ip ocf:heartbeat:IPaddr2 ip=192.168.99.100 cidr_netmask=24 op monitor interval=10s
      when: "inventory_hostname == groups.gluster[0]"
      
    - name: Join the Ganesha service and IP resource in a group to ensure they remain together on the same host.
      shell: pcs resource group add nfs_group nfs_server nfs_ip
      when: "inventory_hostname == groups.gluster[0]"

    - name: Downloading & extarcting Go binary
      ansible.builtin.unarchive:
        src: https://golang.org/dl/go1.15.3.linux-amd64.tar.gz
        dest: /usr/local/
        remote_src: yes

    
    - name: Setup env variables.
      blockinfile:
        path: /etc/profile 
        block: |
          export GOROOT=/usr/local/go
          export GOPATH=/home/centos/work
          export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin/
    
    - name: Creating needed directories
      file:
        path: /home/centos/work/bin/
        state: directory
        recurse: yes

    - name: Creating needed directories
      file:
        path: /home/centos/work/src/github.com/gluster
        state: directory
        recurse: yes


    - name: Clone git repo.
      ansible.builtin.git:
        repo: https://github.com/gluster/gluster-prometheus.git
        dest: /home/centos/work/src/github.com/gluster/gluster-prometheus

    - name: Setup Glusterfs exporter requirements.
      ansible.builtin.script: /home/centos/work/src/github.com/gluster/gluster-prometheus/scripts/install-reqs.sh

    - name: compile and install gluster exporter
      make:
        chdir: /home/centos/work/src/github.com/gluster/gluster-prometheus
        target: install
      become: yes
    
    - name: Start & enable glusterfs exporter.
      ansible.builtin.service:
        name: gluster-exporter
        enabled: yes
        state: started



